name: Build and Test

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'

jobs:
  linux-build:
    name: Linux build (vulkan)

    # TODO: test multiple platforms
    # TODO: use actions-rs/cargo
    runs-on: ubuntu-latest

    steps:
    - name: Get Package
      uses: mstksg/get-package@v1
      with:
        # dependencies found at https://github.com/amethyst/amethyst/blob/master/README.md#debianubuntu
        apt-get: gcc pkg-config openssl libasound2-dev cmake build-essential python3 libfreetype6-dev libexpat1-dev libxcb-composite0-dev libssl-dev libx11-dev
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - uses: actions-rs/cargo@v1
      with:
        command: build
        args: --verbose

  check:
    name: Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-toolchain: [stable, beta, nightly]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust-toolchain }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          toolchain: ${{ matrix.rust-toolchain }}
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-toolchain: [stable, beta, nightly]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust-toolchain }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          toolchain: ${{ matrix.rust-toolchain }}
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-toolchain: [stable, beta, nightly] 
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust-toolchain }}
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          toolchain: ${{ matrix.rust-toolchain }}
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-toolchain: [stable, beta, nightly] 
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust-toolchain }}
          override: true
          components: clippy
      - uses: actions-rs/cargo@v1
        with:
          toolchain: ${{ matrix.rust-toolchain }}
          command: clippy
          args: -- -D warnings
